@model AdminResponse
@{
    ViewBag.Title = "Admin Dashboard";
    Layout = "_AdminLayout";
}

<div class="w-full p-6 bg-white/50 border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700">
    <h1 class="text-2xl font-bold text-gray-900 dark:text-white">Admin Dashboard</h1>
    <div class="mt-4 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <div class="p-4 bg-blue-100 border border-teal-200 rounded-lg dark:bg-teal-900 dark:border-teal-700">
            <h2 class="text-lg font-semibold text-teal-900 dark:text-teal-100">Total Tickets</h2>
            <p class="text-3xl font-bold text-blue-800 dark:text-teal-200">@Model.TotalPaidTickets</p>
        </div>

        <div class="p-4 bg-blue-100 border border-blue-200 rounded-lg dark:bg-blue-900 dark:border-blue-700">
            <h2 class="text-lg font-semibold text-blue-900 dark:text-blue-100">Total Movies</h2>
            <p class="text-3xl font-bold text-blue-800 dark:text-blue-200">@Model.TotalMovies</p>
        </div>

        <div class="p-4 bg-green-100 border border-green-200 rounded-lg dark:bg-green-900 dark:border-green-700">
            <h2 class="text-lg font-semibold text-green-900 dark:text-green-100">Total Showtimes</h2>
            <p class="text-3xl font-bold text-green-800 dark:text-green-200">@Model.TotalMovieShowtimes</p>
        </div>

        <div class="p-4 bg-yellow-100 border border-yellow-200 rounded-lg dark:bg-yellow-900 dark:border-yellow-700">
            <h2 class="text-lg font-semibold text-yellow-900 dark:text-yellow-100">Total Venues</h2>
            <p class="text-3xl font-bold text-yellow-800 dark:text-yellow-200">@Model.TotalMovieVenues</p>
        </div>

        <div class="p-4 bg-red-100 border border-red-200 rounded-lg dark:bg-red-900 dark:border-red-700">
            <h2 class="text-lg font-semibold text-red-900 dark:text-red-100">Total Users</h2>
            <p class="text-3xl font-bold text-red-800 dark:text-red-200">@Model.TotalUsers</p>
        </div>
    </div>
</div>

<div class="w-full mt-5 p-6 bg-white/50 border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700">
    <h1 class="text-2xl font-bold text-gray-900 dark:text-white">
        Tickets Sold Daily
    </h1>
    <canvas id="ticketDailyCountChart" />
</div>

<div class="w-full mt-5 p-6 bg-white/50 border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700">
    <h1 class="text-2xl font-bold text-gray-900 dark:text-white">
        Ongoing Showtimes For Each Movie Venue
    </h1>
    <canvas id="movieVenueOngoingShowtimeChart" />
</div>

<div class="w-full mt-5 p-6 bg-white/50 border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700">
    <h1 class="text-2xl font-bold text-gray-900 dark:text-white">
        Tickets Sold For Each Movie Showtime
    </h1>
    <canvas id="movieShowtimeTicketsSoldChart" />
</div>

<div class="w-full mt-5 p-6 bg-white/50 border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700">
    <h1 class="text-2xl font-bold text-gray-900 dark:text-white">
        Tickets Sold For Each Movie
    </h1>
    <canvas id="moviesSoldOutTicketsChart" />
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const ticketDailyCountChart = document.getElementById('ticketDailyCountChart');
        const ticketDataSet = @Html.Raw(Json.Serialize(Model.TicketsDailyCounts))
        const ticketLabels = ticketDataSet.map(item => {
            const parsedDate = new Date(item.ticket_date);
            return isNaN(parsedDate)
                ? item.ticketDate
                : parsedDate.toLocaleDateString();
        });
        const ticketData = ticketDataSet.map(item => item.total_tickets);

        new Chart(ticketDailyCountChart, {
            type: 'line',
            data: {
                labels: ticketLabels,
                datasets: [{
                    label: 'Tickets Sold Daily',
                    data: ticketData,
                    borderColor: 'rgba(75, 192, 192, 1)',
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderWidth: 2,
                    tension: 0.4
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: true,
                        position: 'top'
                    }
                },
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Date'
                        }
                    },
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Total Tickets'
                        }
                    }
                }
            }
        });
    </script>
    <script>
        const movieVenueOngoingShowtimeChart = document.getElementById('movieVenueOngoingShowtimeChart');
        const movieVenueOngoingShowtimeDataSet = @Html.Raw(Json.Serialize(Model.MovieVenueOngoingShowtimes))
        const movieVenueOngoingShowtimeLabels = movieVenueOngoingShowtimeDataSet.map(item => item.venue_location);
        const movieVenueOngoingShowtimeData = movieVenueOngoingShowtimeDataSet.map(item => item.ongoing_showtimes);

        new Chart(movieVenueOngoingShowtimeChart, {
            type: 'bar',
            data: {
                labels: movieVenueOngoingShowtimeLabels,
                datasets: [{
                    label: 'Ongoing Showtimes For Each Movie Venue',
                    data: movieVenueOngoingShowtimeData,
                    borderColor: 'rgba(75, 192, 192, 1)',
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderWidth: 2,
                    tension: 0.4
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: true,
                        position: 'top'
                    }
                },
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Movie Venues'
                        }
                    },
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Total Ongoing Showtimes'
                        }
                    }
                }
            }
        });
    </script>
    <script>
        const moviesSoldOutTicketsChart = document.getElementById('moviesSoldOutTicketsChart');
        const moviesSoldOutTicketsDataSet = @Html.Raw(Json.Serialize(Model.MoviesSoldOutTickets))
        const moviesSoldOutTicketsLabels = moviesSoldOutTicketsDataSet.map(item => item.movie_name);
        const moviesSoldOutTicketsData = moviesSoldOutTicketsDataSet.map(item => item.tickets_sold);

        new Chart(moviesSoldOutTicketsChart, {
            type: 'bar',
            data: {
                labels: moviesSoldOutTicketsLabels,
                datasets: [{
                    label: 'Tickets Sold For Each Movie',
                    data: moviesSoldOutTicketsData,
                    borderColor: 'rgba(75, 192, 192, 1)',
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderWidth: 2,
                    tension: 0.4
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: true,
                        position: 'top'
                    }
                },
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Movie'
                        }
                    },
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Ticket Sold'
                        }
                    }
                }
            }
        });
    </script>
    <script>
        const movieShowtimeTicketsSoldChart = document.getElementById('movieShowtimeTicketsSoldChart');
        const movieShowtimeTicketsSoldDataSet = @Html.Raw(Json.Serialize(Model.MovieShowtimeTicketsSold))
        const movieShowtimeTicketsSoldLabels = movieShowtimeTicketsSoldDataSet.map(item => item.showtime_name);
        const movieShowtimeTicketsSoldData = movieShowtimeTicketsSoldDataSet.map(item => item.tickets_sold);

        new Chart(movieShowtimeTicketsSoldChart, {
            type: 'bar',
            data: {
                labels: movieShowtimeTicketsSoldLabels,
                datasets: [{
                    label: 'Tickets Sold For Each Movie Showtime',
                    data: movieShowtimeTicketsSoldData,
                    borderColor: 'rgba(75, 192, 192, 1)',
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderWidth: 2,
                    tension: 0.4
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: true,
                        position: 'top'
                    }
                },
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Movie Showtime'
                        }
                    },
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Ticket Sold'
                        }
                    }
                }
            }
        });
    </script>
}
